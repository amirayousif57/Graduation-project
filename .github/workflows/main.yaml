name: CI/CD for Selenium Test Automation

on:
  push:
    branches:
      - main  # Trigger on changes to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests targeting the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu image

    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Set up Java 11 (or your required Java version)
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      # Step 3: Cache Maven dependencies (optional but speeds up builds)
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Install Maven dependencies
      - name: Install Dependencies
        run: mvn install -DskipTests

      # Step 5: Run the Selenium TestNG tests using the testng.xml file
      - name: Run Tests
        run: mvn test -DsuiteXmlFile=testng.xml

      # Step 6: Optionally, upload test results
      - name: Upload TestNG Test Results
        uses: actions/upload-artifact@v3  # Update to v3
        with:
          name: testng-results
          path: target/surefire-reports/  # Modify this if your reports are stored elsewhere

  # You can define additional jobs here like deployment, etc. For example:
  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure deployment happens only after the build job completes
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Deploy to Server
        run: |
          echo "Deploying application..."
          # Add your deployment commands here, for example, using SSH to deploy to your server
